#
#   Either "development" or "production"
#
NODE_ENV=development

#
#   The domain name for the site. This is required even if VHOSTED is set to false.
#   If you want it to run on "localhost" without a custom domain name. Then it should be set to "localhost".
#
VHOST=genshin-data-explorer.localhost

#
#   Whether or not vhost is enabled.
#
VHOSTED=1

#
#   Port for HTTP.
#   The applicable can be accessed at http://localhost:(HTTP_PORT)/ even if VHOSTED is enabled.
#
HTTP_PORT=3002

#
#   Port for HTTPS.
#   SSL_ENABLED must be set to true, otherwise the application will not serve the HTTPS server.
#   Will be disregarded and port 443 will be used instead if VHOSTED is enabled.
#     - If VHOSTED is not enabled, you can access the application at https://localhost:(HTTPS_PORT)/
#     - If VHOSTED is enabled, then this property will be disregarded and port 443 will be used instead
#       and the application will be accessed at https://(VHOST)/
#
HTTPS_PORT=3003

#
#   Whether HTTPS/SSL is enabled for the site.
#   Not necessary if the site is accessed through proxy (e.g. apache's ProxyPass functionality)
#   If this is to false then SSL_KEY/SSL_CERT/SSL_CA/SSL_WELL_KNOWN_DIR aren't needed.
#
SSL_ENABLED=true

#
#   Path to SSL private key.
#
SSL_KEY=C:/Shared/ssl/genshin-data-explorer.localhost.key

#
#   Path to SSL cert.
#
SSL_CERT=C:/Shared/ssl/genshin-data-explorer.localhost.crt

#
#   Path to cacert file.
#
#   If you're using LetsEncrypt, this should be the `chain.pem`
#   not the `fullchain.pem` file.
#
SSL_CA=C:/Shared/ssl/rootSSL.pem

#
#   Absolute path to the .well-known directory if it needs to be accessible for TLS setup.
#   For self-signed certificates, you won't need to set this property.
#
SSL_WELL_KNOWN_DIR=/home/public/.well-known

#
#   CACERT file for HTTP requests sent via backend
#   Download this file from here: https://curl.se/docs/caextract.html
#
SSL_CACERT=C:/Shared/cacert.pem

#
#   Secret for signing sessions.
#   This can literally be anything, just make sure it's secure (e.g. not "password123")
#
SESSID_SECRET=

#
#   The "PATH" environment variable for SHELL_EXEC.
#   Can specifiy multiple directories.
#   For example:
#     /bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
#
SHELL_PATH='C:/Program Files/Git/usr/bin'

#
#   File location for the bash executable.
#   Typically /bin/bash on Linux systems.
#
SHELL_EXEC='C:/Program Files/Git/usr/bin/bash.exe'

#
#   Base absolute path for Genshin data resources.
#   The specified folder should contain these folders/files:
#     - ExcelBinOutput/
#     - Readable/
#     - Subtitle/
#     - TextMap/
#     - genshin_data.db (generated by import_run.ts)
#     - voiceItemsNormalized.json (generated by import_voice.ts)
#
# In order to generate `voiceItemsNormalized.json`, you must have ./BinOutput/Voice/Items,
# but once generated, you no longer need BinOutput
GENSHIN_DATA_ROOT=C:/Shared/GenshinData/

#
#   Leave blank to load all TextMap languages (should always be blank for production)
#   Set to comma-separated list of language codes to only load TextMaps for those languages.
#   Useful for development as loading every TextMap can take a little bit.
#
TEXTMAP_LANG_CODES=